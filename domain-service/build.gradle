plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'ch.qos.logback:logback-classic'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-json'

    implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'
    implementation 'com.google.protobuf:protobuf-java:4.28.2'
    implementation 'com.google.protobuf:protobuf-java-util:3.24.0'
    implementation 'io.grpc:grpc-protobuf:1.58.0'
    implementation 'io.grpc:grpc-stub:1.58.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'


}

tasks.named('test') {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.24.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.58.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}